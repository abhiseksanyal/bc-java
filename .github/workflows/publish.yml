name: Publish jdk15on

on:
  workflow_dispatch:
    inputs:
      version:
        description: Provide the tag to build and release (prefixed with v)
        required: true

jobs:
  build:
    if: github.actor == 'abhiseksanyal'
    runs-on: ubuntu-latest

    steps:
    - name: Checkout
      uses: actions/checkout@v4.1.7
      with:
          fetch-depth: 0

    - name: Check if tag already exists
      # note: this will fail if the tag does not exist
      run: |
          [[ "${{ github.event.inputs.version }}" == v* ]] || (echo "version '${{ github.event.inputs.version }}' does not have a 'v' prefix" && exit 1)
          if git show-ref --tags --verify --quiet "refs/tags/${{ github.event.inputs.version }}"; then
            echo "Tag ${{ github.event.inputs.version }} exists"
          else
            echo "Tag ${{ github.event.inputs.version }} does not exist"
          fi

    - name: Checkout code
      uses: actions/checkout@v4.1.7
      with:
        ref: "${{ github.event.inputs.version }}"

    - name: Set up JDK 8
      uses: actions/setup-java@v4.2.1
      with:
        java-version: '8'
        distribution: 'temurin'
        server-id: nexus # Value of the distributionManagement/repository/id field of the pom.xml
        settings-path: ${{ github.workspace }} # location for the settings.xml file
        server-username: ${{ secrets.NEXUS_USERNAME }}
        server-password: ${{ secrets.NEXUS_PASSWORD }}
        gpg-private-key: ${{ secrets.MAVEN_GPG_PRIVATE_KEY }} # Value of the GPG private key to import
        gpg-passphrase: ${{ secrets.MAVEN_GPG_PASSPHRASE }} # Value of the GPG private key passphrase

    - name: Set up Ant
      uses: cedx/setup-ant@v2
      with:
        version: latest

    - name: Verify Java version
      run: java -version

    - name: Set JDKPATH required for build
      run: echo "JDKPATH=$JAVA_HOME" >> $GITHUB_ENV

    - name: Run build script
      run: bash ./build15+

    - name: Set Package version required for upload
      run: echo "pkg-version=$(cat bc-build.properties | grep release.version | awk -F ':' '{print $2}' | sed -e 's/ //g')" >> $GITHUB_ENV

    - name: Publish to GitHub Packages Apache Maven
      run: mvn deploy -s $GITHUB_WORKSPACE/settings.xml
      env:
        GITHUB_TOKEN: ${{ github.token }}

    - name: Upload Artifacts to Nexus
      env:
        NEXUS_USERNAME: ${{ secrets.NEXUS_USERNAME }}
        NEXUS_PASSWORD: ${{ secrets.NEXUS_PASSWORD }}
        NEXUS_URL: ${{ secrets.NEXUS_URL }}
      run: |
        for i in "bcprov-jdk15on bcpkix-jdk15on bcpg-jdk15on bcjmail-jdk15on bcutil-jdk15on bctls-jdk15on bcmail-jdk15on bcprov-ext-jdk15on"; do
          sed -i "s/\\${version}/${pkg-version}/g" pomfiles/${i}.pom
          mvn deploy:deploy-file -s settings.xml -DrepositoryId=nexus-write -Durl=$NEXUS_URL -Dnexus-username=$NEXUS_USERNAME -Dnexus-password=$NEXUS_PASSWORD -DgroupId=org.bouncycastle -DartifactId=${i} -Dversion=${pkg-version} -Dfile=build/artifacts/jdk1.5/jars/${i}-${pkg-version}.jar
        done

